# yamllint disable rule:line-length
# yamllint disable rule:truthy
# yamllint disable rule:comments-indentation
---
name: static code analysis

on:
  workflow_call:

    secrets:
      OP_SERVICE_ACCOUNT_TOKEN:
        description: 1password vault services account token
        required: false

    inputs:

      working-directory:
        description: Set working directory. Default is ./.
        required: false
        type: string
        default: .

      cosign-version:
        description: Specify cosign version or "installed" to perform scan. Leave blank to skip.
        required: false
        type: string
        default: "false"

      terraform-version:
        description: Specify terraform version or "installed" to perform scan. Leave blank to skip.
        required: false
        type: string
        default: "false"

      terraform-init-additional-args:
        description: |
          Include any additional terraform init command arguments.
          Default is -backend=false.
        required: false
        type: string
        default: -backend=false

      terraform-plan-outfile:
        description: Provide name of terraform plan output file for targeted scan.
        required: false
        type: string
        default: ""

      tflint-version:
        description: Specify tflint version or "installed" to perform scan. Leave blank to skip.
        required: false
        type: string
        default: "false"

      tflint-scan:
        description: perform tflint scan of terraform files
        required: false
        type: string
        default: "false"

      tflint-provider:
        description: Cloud provider. aws, google, or azurerm
        required: false
        type: string
        default: ""

      tflint-provider-version:
        description: Provider plugin version.
        required: false
        type: string
        default: ""

      tflint-additional-args:
        description: |
          Include any additional tflint commandline arguments. Note: not all
          options can be successfully used in a pipeline.
        required: false
        type: string
        default: ""

      checkov-version:
        description: Specify checkov version or "installed" to perform scan. Leave blank to skip.
        required: false
        type: string
        default: "false"

      checkov-scan:
        description: perform checkov scan of terraform files
        required: false
        type: string
        default: "false"

      checkov-additional-args:
        description: Set specific commandline arguments. Default is "-d .".
        required: false
        type: string
        default: "-d ."

      snyk-version:
        description: Specify snyk version or "installed" to perform scan. Leave blank to skip.
        required: false
        type: string
        default: "false"

      snyk-organization:
        description: Snyk organisation name.
        required: false
        type: string
        default: ""

      snyk-scan:
        description: perform snyk iac scan of terraform files
        required: false
        type: string
        default: "false"

      snyk-token:
        description: Snyk API token.
        required: false
        type: string
        default: ""

      snyk-additional-args:
        description: Provide additional commandline arguments.
        required: false
        type: string
        default: ""

      terrascan-version:
        description: specify terrascan version or "installed" to perform scan. Leave blank to skip.
        required: false
        type: string
        default: "false"

      terrascan-scan:
        description: perform terrascan scan of terraform source files
        required: false
        type: string
        default: "false"

      terrascan-init-args:
        description: Provide custom init command flags.
        required: false
        type: string
        default: ""

      terrascan-iac-type:
        description: Terrascan iac provider types.
        required: false
        type: string
        default: ""

      terrascan-policy-type:
        description: Terrascan preset policy types. Default is all.
        required: false
        type: string
        default: "all"

      terrascan-custom-scan-args:
        description: Override default settings with any valid terrascan scan flags.
        required: false
        type: string
        default: ""

      trivy-version:
        description: Specify trivy version or "installed" to perform scan. Leave blank to skip.
        required: false
        type: string
        default: "false"

      trivy-scan:
        description: perform trivy scan of terraform source files
        required: false
        type: string
        default: "false"

      trivy-commandline-args:
        description: Provide additional trivy commandline arguments.
        required: false
        type: string
        default: "config . --exit-code 1"

      before-static-analysis:
        description: optionally call ./.github/actions/before-static-analysis before performing static analysis
        required: false
        type: string
        default: "false"

      job-container-image:
        description: default is latest
        type: string
        required: false
        default: "twdps/gha-container-infra-aws:latest"

jobs:

  static-code-analysis:
    name: static code analysis
    runs-on: ubuntu-latest
    container: ${{ inputs.job-container-image }}

    env:
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

    steps:
      - name: checkout code
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29      # v4.1.6

      - name: run custom before-static-analysis action
        if: ${{ inputs.before-static-analysis != 'false' }}
        uses: ./.github/actions/before-static-analysis
        with:
          instance: ${{ inputs.before-static-analysis }}

      - name: install workflow dependencies
        uses: ThoughtWorks-DPS/terraform-action/install@main
        with:
          cosign-version: ${{ inputs.cosign-version }}
          terraform-version: ${{ inputs.terraform-version }}
          tflint-version: ${{ inputs.tflint-version }}
          trivy-version: ${{ inputs.trivy-version }}
          checkov-version: ${{ inputs.checkov-version }}
          snyk-version: ${{ inputs.snyk-version }}
          terrascan-version: ${{ inputs.terrascan-version }}

      - name: terraform init
        working-directory: ${{ inputs.working-directory }}
        shell: bash
        run: |
          terraform version
          terraform init ${{ inputs.terraform-init-additional-args }}

      - name: terraform validate
        uses: ThoughtWorks-DPS/terraform-action/validate@main
        with:
          working-directory: ${{ inputs.working-directory }}

      - name: perform tflint scan of terraform source files
        if: ${{ inputs.tflint-scan == 'true' }}
        uses: ThoughtWorks-DPS/terraform-action/tflint-scan@main
        with:
          working-directory: ${{ inputs.working-directory }}
          tflint-provider: ${{ inputs.tflint-provider }}
          tflint-provider-version: ${{ inputs.tflint-provider-version }}
          tflint-additional-args: ${{ inputs.tflint-additional-args }}

      - name: perform trivy scan of terraform source files
        if: ${{ inputs.trivy-scan == 'true' }}
        uses: ThoughtWorks-DPS/terraform-action/trivy-scan@main
        with:
          working-directory: ${{ inputs.working-directory }}
          trivy-commandline-args: ${{ inputs.trivy-commandline-args }}

      - name: perform checkov scan of terraform source files
        if: ${{ inputs.checkov-scan == 'true' }}
        uses: ThoughtWorks-DPS/terraform-action/checkov-scan@main
        with:
          working-directory: ${{ inputs.working-directory }}
          terraform-plan-outfile: ${{ inputs.terraform-plan-outfile }}
          checkov-additional-args: ${{ inputs.checkov-additional-args }}

      - name: perform snyk iac scan of terraform source files
        if: ${{ inputs.snyk-scan == 'true' }}
        uses: ThoughtWorks-DPS/terraform-action/snyk-scan@main
        with:
          working-directory: ${{ inputs.working-directory }}
          snyk-token: ${{ inputs.snyk-token }}
          snyk-organization: ${{ inputs.snyk-organization }}
          snyk-additional-args: ${{ inputs.snyk-additional-args }}

      - name: perform terrascan on repository files
        if: ${{ inputs.terrascan-scan == 'true' }}
        uses: ThoughtWorks-DPS/terraform-action/terrascan-scan@main
        with:
          working-directory: ${{ inputs.working-directory }}
          terrascan-init-args: ${{ inputs.terrascan-init-args}}
          terrascan-iac-type: ${{ inputs.terrascan-iac-type}}
          terrascan-policy-type: ${{ inputs.terrascan-policy-type}}
          terrascan-custom-scan-args: ${{ inputs.terrascan-custom-scan-args}}

        # - when:
        #     name: run infracost analysis
        #     condition: << parameters.infracost-scan >>
        #     steps:
        #       - infracost:
        #           working-directory: << parameters.working-directory >>
        #           infracost-api-key: << parameters.infracost-api-key >>
        #           infracost-additional-args: << parameters.infracost-additional-args >>
        # - when:
        #     name: Run after-static-analysis lifecycle hook steps
        #     condition: << parameters.after-static-analysis >>
        #     working_directory: << parameters.working-directory >>
        #     steps: << parameters.after-static-analysis >>
