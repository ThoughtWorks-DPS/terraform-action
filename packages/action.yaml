---
name: packages

description: Install packages for terraform-action@workflows

inputs:

  working-directory:
    description: set working directory; default is .
    required: false
    default: .

  cosign-version:
    description: Specify cosign version
    required: false
    default: installed

  terraform-version:
    description: Specify terraform version
    required: false
    default: installed

  tflint-version:
    description: Specify tflint version
    required: false
    default: installed

runs:
  using: "composite"
  
  steps:
    - if: ${{ inputs.cosign-version }} != "installed"
      name: install cosign version ${{ inputs.cosign-version }}
      uses: sigstore/cosign-installer@main
      with:
        cosign-release: v${{ inputs.cosign-version }}

    - name: install terraform version ${{ inputs.terraform-version }}
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        if [[ "${{ inputs.terraform-version }}" != "installed" ]]; then

          # download and import HashiCorp public key
          curl --remote-name https://keybase.io/hashicorp/pgp_keys.asc
          if result=$(gpg --import pgp_keys.asc 2>&1); then
            echo "loaded HashiCorp public key"
          else
              echo "Unable to import HashiCorp key"
              echo "GPG Output:"
              echo "$result"
          fi

          # download terraform installation packages
          curl --remote-name "https://releases.hashicorp.com/terraform/${{ inputs.terraform-version }}/terraform_${{ inputs.terraform-version }}_linux_amd64.zip"
          curl --remote-name "https://releases.hashicorp.com/terraform/${{ inputs.terraform-version }}/terraform_${{ inputs.terraform-version }}_SHA256SUMS"
          curl --remote-name "https://releases.hashicorp.com/terraform/${{ inputs.terraform-version }}/terraform_${{ inputs.terraform-version }}_SHA256SUMS.sig"

          # verify SHA signature
          if result=$(gpg --verify "terraform_${{ inputs.terraform-version }}_SHA256SUMS.sig" "terraform_${{ inputs.terraform-version }}_SHA256SUMS" 2>&1); then
              echo "Verified SHA signature"
          else
              echo "Unable to verify SHA signature"
              echo "GPG Output:"
              echo "$result"
              exit 1
          fi

          # verify terraform cli package
          if result=$(shasum --ignore-missing --algorithm 256 --check "terraform_${{ inputs.terraform-version }}_SHA256SUMS" 2>&1); then
              echo "Verified terraform package"
          else
              echo "Unable to verify terraform package"
              echo "shasum Output:"
              echo "$result"
              exit 1
          fi

          # install and smoke test terraform cli
          sudo unzip -o "terraform_${{ inputs.terraform-version }}_linux_amd64.zip" -d /usr/local/bin
          terraform version
        fi

    - name: install tflint version ${{ inputs.tflint-version }}
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        if [[ "${{ inputs.tflint-version }}" != "installed" ]]; then
          # download tflint and verification packages
          curl -SLO "https://github.com/terraform-linters/tflint/releases/download/v${{ inputs.tflin-version }}/tflint_linux_amd64.zip"
          curl -SLO "https://github.com/terraform-linters/tflint/releases/download/v${{ inputs.tflin-version }}/checksums.txt"
          curl -SLO "https://github.com/terraform-linters/tflint/releases/download/v${{ inputs.tflin-version }}/checksums.txt.pem"
          curl -SLO "https://github.com/terraform-linters/tflint/releases/download/v${{ inputs.tflin-version }}/checksums.txt.keyless.sig"

          # verify cosign origination
          if result=$(cosign verify-blob --certificate=checksums.txt.pem --signature=checksums.txt.keyless.sig --certificate-identity-regexp="^https://github.com/terraform-linters/tflint" --certificate-oidc-issuer=https://token.actions.githubusercontent.com checksums.txt 2>&1); then
              echo "Verified cosign build source"
          else
              echo "Unable to verify cosign build source"
              echo "cosign Output:"
              echo "$result"
              exit 1
          fi

          # verify cosign package sha
          if result=$(shasum --ignore-missing --algorithm 256 --check  checksums.txt 2>&1); then
              echo "Verified tflint package sha"
          else
              echo "Unable to verify tflint package sha"
              echo "shasum Output:"
              echo "$result"
              exit 1
          fi

          # install and smoke test tflint
          sudo unzip -o tflint_linux_amd64.zip -d /usr/local/bin
          tflint --version
        fi